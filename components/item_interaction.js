AFRAME.registerComponent('item-interaction', {
  schema: {
    type: { default: 'generic' } // 'key', 'coin', 'door'
  },

  init: function () {
    const el = this.el;

    // –°–æ–∑–¥–∞—ë–º HUD, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
    if (!document.querySelector('#hud-message')) {
      const hud = document.createElement('div');
      hud.id = 'hud-message';
      Object.assign(hud.style, {
        position: 'fixed',
        bottom: '30px',
        left: '30px',
        fontFamily: 'monospace',
        fontSize: '16px',
        color: 'white',
        background: 'rgba(0, 0, 0, 0.45)',
        backdropFilter: 'blur(6px)',
        padding: '10px 14px',
        borderRadius: '10px',
        maxWidth: '300px',
        pointerEvents: 'none',
        opacity: '0',
        transform: 'translateY(10px)',
        transition: 'opacity 0.4s ease, transform 0.4s ease',
        zIndex: '999'
      });
      document.body.appendChild(hud);
    }

    const showMessage = (text, color = 'white') => {
      const hud = document.querySelector('#hud-message');
      hud.style.color = color;
      hud.innerHTML = text;
      hud.style.opacity = '1';
      hud.style.transform = 'translateY(0)';

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
      clearTimeout(hud.timeout);
      hud.timeout = setTimeout(() => {
        hud.style.opacity = '0';
        hud.style.transform = 'translateY(10px)';
      }, 2500);
    };

    el.addEventListener('click', () => {
      const type = this.data.type;

      switch (type) {
        case 'key':
          window.hasKey = true;
          el.parentNode.removeChild(el);
          showMessage('üîë –ö–ª—é—á –ø–æ–¥–æ–±—Ä–∞–Ω!', 'gold');
          break;

        case 'coin':
          el.parentNode.removeChild(el);
          showMessage('ü™ô –ú–æ–Ω–µ—Ç–∞ —Å–æ–±—Ä–∞–Ω–∞!', 'yellow');
          break;

        case 'door':
          if (window.hasKey) {
            showMessage('üö™ –î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è...', 'lightblue');
            window.hasKey = false;
            setTimeout(() => {
              el.setAttribute('animation-mixer', {
                clip: 'opened',
                loop: 'once',
                crossFadeDuration: 1
              });
            }, 300);
          } else {
            showMessage('üö´ –î–≤–µ—Ä—å –∑–∞–ø–µ—Ä—Ç–∞. –ù—É–∂–µ–Ω –∫–ª—é—á.', 'red');
          }
          break;

        default:
          showMessage('‚ùî –ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ...', 'white');
      }
    });
  }
});
