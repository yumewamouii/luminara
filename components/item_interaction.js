AFRAME.registerComponent('item-interaction', {
  schema: {
    type: {default: 'generic'} // 'key', 'coin', 'door'
  },
  init: function () {
    const el = this.el;

    el.addEventListener('click', () => {
      const type = this.data.type;

      switch (type) {
        case 'key':
          window.hasKey = true;
          el.parentNode.removeChild(el);
          console.log('%cüîë –ö–ª—é—á –ø–æ–¥–æ–±—Ä–∞–Ω!', 'color: gold');
          break;

        case 'coin':
          el.parentNode.removeChild(el);
          console.log('%cü™ô –ú–æ–Ω–µ—Ç—ã —Å–æ–±—Ä–∞–Ω—ã!', 'color: yellow');
          break;

        case 'door':
          if (window.hasKey) {
            console.log('%cüö™ –î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è...', 'color: lightblue');
            window.hasKey = false;
            // –ü–æ—Å–ª–µ –∫–æ—Ä–æ—Ç–∫–æ–π –ø–∞—É–∑—ã ‚Äî –∞–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è
            setTimeout(() => {
              el.setAttribute('animation-mixer', {
                clip: 'opened',
                loop: 'once',
                crossFadeDuration: 1
              });
            }, 300); // –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥ –¥–ª–∏–Ω—É "closed"
          } else {
            console.log('%cüö´ –î–≤–µ—Ä—å –∑–∞–ø–µ—Ä—Ç–∞. –ù—É–∂–µ–Ω –∫–ª—é—á.', 'color: red');
          }
          break;
      }
    });
  }
});
